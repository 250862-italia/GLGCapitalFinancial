#!/bin/bash

echo "üöÄ RENDIAMO L'ADMIN DASHBOARD OPERATIVA!"
echo "=========================================="

# Verifica che il server sia in esecuzione
echo "üìã Verifica server in esecuzione..."
if ! pgrep -f "next dev" > /dev/null; then
    echo "‚ö†Ô∏è  Server non in esecuzione, avvio..."
    npm run dev &
    sleep 5
else
    echo "‚úÖ Server gi√† in esecuzione"
fi

# Verifica connessione Supabase
echo "üìã Verifica connessione Supabase..."
node -e "
const { createClient } = require('@supabase/supabase-js');
const supabase = createClient(process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);
supabase.from('profiles').select('count').limit(1).then(() => {
    console.log('‚úÖ Connessione Supabase OK');
}).catch(err => {
    console.log('‚ùå Errore connessione Supabase:', err.message);
});
"

# Mostra istruzioni per lo script SQL
echo ""
echo "üìã PROSSIMI PASSI PER RENDERE OPERATIVA:"
echo "=========================================="
echo ""
echo "1Ô∏è‚É£  ESEGUI SCRIPT SQL IN SUPABASE:"
echo "   ‚Ä¢ Vai su https://supabase.com/dashboard"
echo "   ‚Ä¢ Seleziona il tuo progetto GLG Capital"
echo "   ‚Ä¢ Clicca su 'SQL Editor' nella sidebar"
echo "   ‚Ä¢ Clicca su 'New query'"
echo "   ‚Ä¢ Copia tutto il contenuto del file: create-missing-tables-pure-sql.sql"
echo "   ‚Ä¢ Incolla nel SQL Editor"
echo "   ‚Ä¢ Clicca 'Run' (pulsante blu)"
echo "   ‚Ä¢ Aspetta che completi"
echo ""
echo "2Ô∏è‚É£  VERIFICA ESECUZIONE:"
echo "   ‚Ä¢ Dovresti vedere messaggi di successo come:"
echo "     ‚úÖ Packages table created successfully"
echo "     ‚úÖ Investments table created successfully"
echo "     ‚úÖ Payments table created successfully"
echo "     ‚úÖ KYC requests table created successfully"
echo "     ‚úÖ Informational requests table created successfully"
echo "     ‚úÖ Clients table updated successfully"
echo ""
echo "3Ô∏è‚É£  TESTA ADMIN DASHBOARD:"
echo "   ‚Ä¢ Vai su http://localhost:3000/admin/login"
echo "   ‚Ä¢ Login con:"
echo "     Email: admin@glgcapital.com"
echo "     Password: GLGAdmin2024!"
echo "   ‚Ä¢ Verifica accesso alla dashboard"
echo ""
echo "4Ô∏è‚É£  VERIFICA OPERAZIONI CRUD:"
echo "   ‚Ä¢ Testa tutte le sezioni:"
echo "     - Users Management (CREATE, READ, UPDATE, DELETE)"
echo "     - Team Management (CREATE, READ, UPDATE, DELETE)"
echo "     - Packages Management (CREATE, READ, UPDATE, DELETE)"
echo "     - Partnerships (CREATE, READ, UPDATE, DELETE)"
echo "     - Content Management (CREATE, READ, UPDATE, DELETE)"
echo "     - Clients Management (READ, DELETE)"
echo "     - Analytics (CREATE, READ, UPDATE, DELETE)"
echo ""
echo "5Ô∏è‚É£  VERIFICA FINALE:"
echo "   ‚Ä¢ Esegui: node verify-admin-operational.js"
echo "   ‚Ä¢ Tutti i test dovrebbero passare"
echo ""
echo "üéâ DOPO QUESTI PASSI L'ADMIN DASHBOARD SAR√Ä COMPLETAMENTE OPERATIVA!"
echo ""
echo "üìÑ File di riferimento:"
echo "   ‚Ä¢ RENDI_ADMIN_OPERATIVA.md - Guida completa"
echo "   ‚Ä¢ ADMIN_CRUD_STATUS.md - Status dettagliato"
echo "   ‚Ä¢ create-missing-tables-pure-sql.sql - Script SQL"
echo "   ‚Ä¢ verify-admin-operational.js - Script di verifica"
echo ""
echo "üåê URLs disponibili:"
echo "   ‚Ä¢ Frontend: http://localhost:3000"
echo "   ‚Ä¢ Admin Login: http://localhost:3000/admin/login"
echo "   ‚Ä¢ Admin Dashboard: http://localhost:3000/admin"
echo ""
echo "üîß Credenziali Admin:"
echo "   ‚Ä¢ Email: admin@glgcapital.com"
echo "   ‚Ä¢ Password: GLGAdmin2024!"
echo ""
echo "=========================================="
echo "üöÄ PRONTO PER RENDERE OPERATIVA!" 